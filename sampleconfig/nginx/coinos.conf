server {
    listen 80;
    server_name dev.coinos.io;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }    
}
server {
    listen 443 ssl;
    server_name dev.coinos.io;

    ssl_certificate /etc/letsencrypt/live/dev.coinos.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dev.coinos.io/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    location / {
        proxy_pass http://ui:8085; #for demo purposes
    }

    location /api/ {
     proxy_set_header  Host $host;
     proxy_set_header  X-Real-IP $remote_addr;
     proxy_set_header  X-Forwarded-Proto https;
     proxy_set_header  X-Forwarded-For $remote_addr;
     proxy_set_header  X-Forwarded-Host $remote_addr;
     rewrite ^ $request_uri?;
     rewrite ^/api/(.*) /$1 break;
     return 400;
     proxy_pass http://app:3119$uri$is_args;
    }

    location /api/balances {
      proxy_set_header  Host $host;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-Proto https;
      proxy_set_header  X-Forwarded-For $remote_addr;
      proxy_set_header  X-Forwarded-Host $remote_addr;
      rewrite ^/api/(.*) /$1 break;
      proxy_pass http://app:3119$uri$is_args$args;
    }

    location /sockjs-node {
     proxy_set_header Upgrade $http_upgrade;
     proxy_set_header Connection "upgrade";
     proxy_http_version 1.1;
     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
     proxy_set_header Host $host;
     rewrite ^/ws/(.*) /$1 break;
     proxy_pass http://ui:8085;
    }

    location /ws {
     proxy_set_header Upgrade $http_upgrade;
     proxy_set_header Connection "upgrade";
     proxy_http_version 1.1;
     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
     proxy_set_header Host $host;
     rewrite ^/ws/(.*) /$1 break;
     proxy_pass http://app:3119;
    }
}
